import pygame
import random
import copy
import spritesheet

pygame.init()
win_wd = 1600
win_hg = 1200
screen = pygame.display.set_mode((win_wd, win_hg))
tilesheet = spritesheet.spritesheet("tileset_ruins.png")
tiles = [[tilesheet.image_at(pygame.Rect(x * 16, y * 16, 16, 16)) for x in range(3)] for y in range(3)]
pygame.display.set_caption("A Nice Game")
done = False

clock = pygame.time.Clock()


class Cell:
    def __init__(self, color, grid, pos):
        self.color = color
        self.grid = grid
        self.pos = pos

    def __repr__(self):
        return str(self.color)

    def __eq__(self, other):
        return self.color == other.color

    def __int__(self):
        return self.color


class CellGrid:

    colors = [(60, 128, 255), (128, 200, 40), (224, 20, 28), (0,0,0), (255,255,255)]

    viridis = [(200, 200, 200),
               (68, 1, 84),    (69, 55, 129),  (35, 138, 141),
               (31, 150, 139), (41, 175, 127), (85, 198, 103),
               (115, 208, 85), (184, 222, 41), (253, 231, 37)]

    def __init__(self, colornb, width, height, screen, seed=None):
        self.colornb = colornb
        self.width = width      #number of cells
        self.height = height
        self.screen = screen
        self.grid = []
        if seed == None:
            for y in range(height):
                row = []
                for x in range(width):
                    color = random.randrange(colornb)
                    row.append(Cell(color, self.grid, (x, y)))
                self.grid.append(row)
            self.cell_width = int(screen.get_width() / width)  # size of cells
            self.cell_height = int(screen.get_height() / height)
        else:
            self.update_grid_with_strls(seed)
        self.update_dict = self.update_rule()
        #print(self.update_dict)

    def update_grid_with_strls(self, sl):
        height = len(sl)
        width = len(sl[0])
        self.grid = [[Cell(int(sl[y][x]), self.grid, (x, y)) for x in range(width)] for y in range(height)]
        self.height = height
        self.width = width
        self.cell_width = int(screen.get_width() / width)
        self.cell_height = int(screen.get_height() / height)
        print(width, height)
        print(self.cell_width, self.cell_height)

    def child_choice(self, mode, nbhood):

        #modes after this line use rank 0 nbhood

        if mode == 0:
            return random.randrange(self.colornb)

        elif mode == 1 or mode == 2:
            max_char = '0'
            max_count = nbhood.count('0')
            for i in "1234":
                if nbhood.count(i) > max_count:
                    max_count = nbhood.count(i)
                    max_char = i
                elif nbhood.count(i) == max_count and mode == 2:
                    if random.randrange(2):
                        max_count = nbhood.count(i)
                        max_char = i
            return int(max_char)

        #2 colors gives great level generation for this one
        elif mode == 3:
            counts = [nbhood.count(x) for x in "01234"]
            maxint = counts.index(max(counts))
            vrand = random.randrange(2)
            #print(str(counts) + " __ " + str(maxint) + " __ " + str(vrand))
            for i in range(self.colornb - 1):
                for j in range(i + 1, self.colornb):
                    if counts[i] == counts[j]:
                        if i == maxint or j == maxint:
                            return maxint
                        else:
                            return i if vrand else j
                return maxint

        #not very interesting level design wise, but cute with 4 colors
        elif mode == 4:
            card = nbhood[1:self.colornb]
            counts = [card.count(x) for x in "01234"]
            for i in range(3):
                for j in range(1, 4):
                    if counts[i] == counts[j] and abs(i-j) == 1:
                        return int(nbhood[i])
            return int(card[max(counts)])

        #fun with 2 colors, maybe of interest
        elif mode == 5:
            vrand = random.randrange(5)
            if vrand == 0:
                return self.child_choice(0, nbhood)
            elif vrand == 1:
                return self.child_choice(4, nbhood)
            else:
                return self.child_choice(3, nbhood)

        #pretty nice with 2 colors
        elif mode == 6:
            vrand = random.randrange(5)
            if vrand == 0:
                return self.child_choice(2, nbhood)
            elif vrand == 1:
                return self.child_choice(4, nbhood)
            else:
                return self.child_choice(3, nbhood)

        elif mode == 7:
            b = False
            counts = [nbhood.count(x) for x in "01234"]
            maxint = counts.index(max(counts))

            s = nbhood[3] + nbhood[0] + nbhood[4] #left, center, right
            if s == "000" or s == "010" or s == "001":
                return 0
            elif s == "110" or s == "011":
                b = True
            elif s == "101":
                return 1

            s = nbhood[1] + nbhood[0] + nbhood[2] #up, center, down
            if s == "000" or s == "010" or s == "001":
                return maxint * (1 - b)
            elif s == "101":
                return 0

            return self.child_choice(3, nbhood)

        # modes after this line use rank 1 nbhood

        # the following mode is rank 0 and is used for spritesheet definition; "SPRITE"
        elif mode == "SPRITE":
            if nbhood[0] == '0':
                return 0
            else:
                s = nbhood[1:5]
                if s == "0101":
                    return 1
                if s == "0111":
                    return 2
                if s == "0110":
                    return 3
                if s == "1101":
                    return 4
                if s == "1111":
                    return 5
                if s == "1110":
                    return 6
                if s == "1001":
                    return 7
                if s == "1011":
                    return 8
                if s == "1010":
                    return 9
            return 0


    def update_rule(self, mode=None):
        if mode == None:
            mode = 7
        dict = {}
        colors = "01234"
        for keys in range(pow(self.colornb, 5)):
            s = list("     ")
            for i in range(self.colornb):
                s[0] = colors[i]
                for j in range(self.colornb):
                    s[1] = colors[j]
                    for k in range(self.colornb):
                        s[2] = colors[k]
                        for l in range(self.colornb):
                            s[3] = colors[l]
                            for m in range(self.colornb):
                                s[4] = colors[m]
                                res = "".join(s)
                                dict[res] = self.child_choice(mode, res)
        return dict

    def get_nbhood(self, x, y, rank):
        #rank == 0 => manhattan nbhood, dist 1 ; rank == 1 => square nbh, dist 1
        s = ""
        nx = 0 if x + 1 == self.width else x + 1
        ny = 0 if y + 1 == self.height else y + 1
        # order in heredity string is center, north, south, west, east. The 2D plane loops at the borders.
        if rank == 0:
            s = s + str(self.grid[y][x].color)
            s = s + str(self.grid[y - 1][x].color)
            s = s + str(self.grid[ny][x].color)
            s = s + str(self.grid[y][x - 1].color)
            s = s + str(self.grid[y][nx].color)
        # order is lexicographic (left right then top down)
        elif rank == 1:
            s = s + str(self.grid[y - 1][x - 1].color)
            s = s + str(self.grid[y - 1][x].color)
            s = s + str(self.grid[y - 1][nx].color)
            s = s + str(self.grid[y][x - 1].color)
            s = s + str(self.grid[y][x].color)
            s = s + str(self.grid[y][nx].color)
            s = s + str(self.grid[ny][x - 1].color)
            s = s + str(self.grid[ny][x].color)
            s = s + str(self.grid[ny][nx].color)
        return s

    def update(self, rank=0, mode=None):
        dict = self.update_dict if mode == None else self.update_rule(mode=mode)
        grid = []
        for y in range(self.height):
            row = []
            for x in range(self.width):
                s = self.get_nbhood(x, y, rank)
                color = dict[s]
                row.append(Cell(color, self.grid, (x * self.cell_width, y * self.cell_height)))
            grid.append(row)
        self.grid = grid

    def display(self, mode=None):
        colorarr = self.colors if mode==None else self.viridis

        print("DEBUG DISPLAY")
        print(self.grid[2][2])
        print(self.cell_width)
        print(self.cell_height)
        for row in self.grid:
            for cell in row:
                #print(cell.pos)
                #print(self.cell_width)
                #print(self.cell_height)
                pygame.draw.rect(self.screen,
                                 colorarr[cell.color],
                                 pygame.Rect((cell.pos[0], cell.pos[1]),
                                             (self.cell_width, self.cell_height)))

    def clean(self, boolgrid):
        #boolgrid should be false on unstable spots
        for y in range(self.height):
            for x in range(self.width):
                if not boolgrid[y][x]:
                    self.grid[y][x] = Cell(0, self.grid, (x, y))


    def scale3x(self):
        """
        source wikipedia
A B C --\  1 2 3
D E F    > 4 5 6
G H I --/  7 8 9
 1=E; 2=E; 3=E; 4=E; 5=E; 6=E; 7=E; 8=E; 9=E;
 IF D==B AND D!=H AND B!=F => 1=D
 IF (D==B AND D!=H AND B!=F AND E!=C) OR (B==F AND B!=D AND F!=H AND E!=A) => 2=B
 IF B==F AND B!=D AND F!=H => 3=F
 IF (H==D AND H!=F AND D!=B AND E!=A) OR (D==B AND D!=H AND B!=F AND E!=G) => 4=D
 5=E
 IF (B==F AND B!=D AND F!=H AND E!=I) OR (F==H AND F!=B AND H!=D AND E!=C) => 6=F
 IF H==D AND H!=F AND D!=B => 7=D
 IF (F==H AND F!=B AND H!=D AND E!=G) OR (H==D AND H!=F AND D!=B AND E!=I) => 8=H
 IF F==H AND F!=B AND H!=D => 9=F
        """
        tiles_9by9 = []
        for y in range(self.height):
            for x in range(self.width):
                s = self.get_nbhood(x, y, 1)
                c = s[4]
                lc = [c, c, c, c, c, c, c, c, c]
                if s[3] == s[1] and s[3] != s[7] and s[1] != s[5]:
                    lc[0] = s[3]
                if (s[3] == s[1] and s[3] != s[7] and s[1] != s[5] and c != s[2]) or (s[1] == s[5] and s[1] != s[3] and s[5] != s[7] and c != s[0]):
                    lc[1] = s[1]
                if s[1] == s[5] and s[1] != s[3] and s[5] != s[7]:
                    lc[2] = s[5]
                if ( s[7] == s[3] and s[7] != s[5] and s[3] != s[1] and c != s[0]) or ( s[3] == s[1] and s[3] != s[7] and s[1] != s[5] and c != s[6]):
                    lc[3] = s[3]
                    #sl[4] = c
                if (s[1] == s[5] and s[1] != s[3] and s[5] != s[7] and c != s[8]) or ( s[5] == s[7] and s[5] != s[1] and s[7] != s[3] and c != s[2]):
                    lc[5] = s[5]
                if s[7] == s[3] and s[7] != s[5] and s[3] != s[1]:
                    lc[6] = s[3]
                if (s[5] == s[7] and s[5] != s[1] and s[7] != s[3] and c != s[6]) or ( s[7] == s[3] and s[7] != s[5] and s[3] != s[1] and c != s[8]):
                    lc[7] = s[7]
                if s[5] == s[7] and s[5] != s[1] and s[7] != s[3]:
                    lc[8] = s[5]
                tiles_9by9.append("".join(lc))
        sl = []
        for y in range(self.height):
            row = ""
            start = (y % 3) * 3
            for x in range(self.width):
                row += tiles_9by9[y * self.width + x][start:start+3]
            sl.append(row)
        self.update_grid_with_strls(sl)
        self.cell_width = int(self.screen.get_width() / self.width)
        self.cell_height = int(self.screen.get_height() / self.height)



    def __eq__(self, other):
        if self.width != other.width or self.height != other.height:
            return False
        for y in range(self.height):
            for x in range(self.width):
                if self.grid[y][x] != other.grid[y][x]:
                    return False
        return True

    def __and__(self, other):
        return [[self.grid[y][x] == other.grid[y][x] for x in range(self.width)] for y in range(self.height)]

    def __or__(self, other):
        return [[self.grid[y][x].color == 1 or other.grid[y][x].color == 1 for x in range(self.width)] for y in range(self.height)]

    def __str__(self):
        s = ""
        for y in range(self.height):
            row = ""
            for x in range(self.width):
                row += str(self.grid[y][x])
            row = "\"" + row + "\",\n"
            s += row
        return s


    """
# dim (160,120)
seed = [
"0000000000000000000001111111000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"0000110000000000111111111111001111111000000000001100001100000000111111000111000001001011001111111001111001100011111100100000000000000111100000000110000110000000",
"0000111100001100111111111111001100011000001100001100001100000000111000001111001100000000000111111001111111110001111111100000000000000000000000000111100000000000",
"1100011110001100111111101111001100011100001111111100001100000000111000011111001100000000000000111000000110011001111111100011111111110000000000000000110000000001",
"1100011110001100000000000111001111111100001101110000000000000000000000011111000000000111100000011000000110001111111101110011111111110000011100000000011000001111",
"1100000110001100000000000111111111110000011101110000000000000000001111111111000000000111111110000000001110001111111100110011111111110000011100110011011110001110",
"1100000110001110000011111011111011100000011001110001111110000000001111111101000000000111111110000011111110001111111100110011110011110000000000110011011111001110",
"0000011110001111100011111011110000000011111001111111111110000001111111111101000000000000111100000011111110011111111100000111000001111000000000000000011111000000",
"0000011111001111110011111011110000001111111001111110111110000001111111100001111110000000000000001111111110011111110000001111000001111110000000000000001111000000",
"0000000111111101110000011011000000001111100001111110011110000011111100000001111111000000000000001111111110011111110000011111000001111111100000000000001111111000",
"0001100001111000000000011011000000001111100000111100011110000011100000000001110111000111111100001101111100000001100000111111000001110011111000000000000111111000",
"1001100001111000000000011000000011000011100000111100001110000111100000000001100111000111111100000000111000000000000000111111000001110011111000000000000111111111",
"1001100001111111100000011000000011100011100000000000000000111111000111000011000111000101110110000000011000000000000000011100000011111111111000000001110111100011",
"1000000000111111111100011000000011100011110000000000000000111111001111001111000111000100000111000000000000000000000000001100000111111111111110000001110111000011",
"1100000000111111111111000000011111100001111000000000000000111111111111001111000111111100011111111100000000111000001100001100001111111100011110000001110111000000",
"1100000000111111011110100010101000000000000001111111001010101001000100101001011001011110011111111110011100111000001100011000001111111100000110111001100111000000",
"1100000001111110000011000000000000111111001110111110111000001111111100011011000111011110011111111110011100111000011100011000001111111110000100111111100011000000",
"1000000001111110110001000000000000111111001110111110111000001110111100011011001111000000011111111110000000011100111100011110001111111110000100000111100000000001",
"1011000111000100110001100000000011101111000000111100000000001110111001111011001110000000000001111110000000011111111100011110001111111110000111110111110000000001",
"0011000111000100011001111100000011100111000000011100000011001110111001111000001110000000000001100010000000011111111110011111111111111110000000110111110000000000",
"0011111111000100011001111110000011100000000000010000111111001100111001111111111110000111101101100011000000011111111110000001111111000000000000000111110000000000",
"0111111110000100011111110110000001100000110000110000111111000000111001111111111100000111101101110011000000000011111110000001111111000000000000000110000000000000",
"0111001110000100000011110000000001111110110000110000000111111000001110011100001100000000000000110000000000000000000000001111110000000000000111000010000000000000",
"0000001110000111000011110000000000111110000001110000000000011000000110011100001100000000000000110000000000000000000000111111110000000000011111000010000000000000",
"0000001110000111111111011100000110011110000011110000000000000000000011011100110000000000000001110110000000000000000000111111100000000000111111000010000000000000",
"0000011110000110111111011100001110011100000111110001100000000000000011001100110000000000000001110110000000001100000000111110000001100000111111011110000000011100",
"0000011000000000001111000111111111111100001111111111110000000000000111101100000000001111110000000011100000001110000011111110001101100000000001011111000000111100",
"0000111000000000001111000011110111111100001111111111111111100000000111100000000000001111110000000011111000001111000111101110001100000000000001011111100001111000",
"0000111000000000001100000011110011111100011111000011111111100000000111000000000011000011110000001111111100011111111110001110000000011111001111011111110001111000",
"0000111000000000001100000000110011111111111000000000000111000000000011000000000111000011110000001111111100011111111110000110000001110111001111000111111001101000",
"0000111111000000001100011000000011111111111000000000000111001100000001001111111110000000000000000000000000011111110000000000000001110111001111100011011001101100",
"0000111111110000001111011000000000000111111000000000011011011100110001001111111110000000000001100000000000011100000000000000000000000111100111110000000000001100",
"0000110001110000001111011000000110000111111000000000111000011111110001111101110000000000000001111111110000011100000000000000000000001111100001111000000000000000",
"1000110000000000001111011100000111111111100000111111111100011110000001111100110000000000000000111111110111111100000000000011110000001111111100111100110000000001",
"1000111110001111000000011110000011111111100000111111011100011110000011111100000000000000000000011111000111111110000000000011110000001111111100011100110000000001",
"0000111110001111000000011110000011111110000000111000001100011110000011111110000111110000000000011111000111110110000111000000111001100001111110011100110000000000",
"0000111110000000000000001111000011111110000001111000001100000111100001111111000111111110000000111111000111110000000111100000111001100000001111000000000011100000",
"0000011110000000000000000011100111111111100001111000000000000111100000111111000111111110000000111111000111110000111111100001111001100000001111100001111111100000",
"1110011111110000000011000011100111000111111001111100000000000111100000111111000011111110000000111110000000110011111110000001100001100000001111111001111111000000",
"1111111111111110000011000111111111000111111001111110000000001111111000111111110011111100000001111110000000000111001110000001100000000000011110011001111110000000",
"1111100111100110000000001111111111000111111001111111111000001111111000111111111111111100000111111110000000000111001111100001111100011000011110000111111100000000",
"1111000111100000111100011111101110000011111000001111111110011100000000111111111111111100001111111100000000011111001111100001111100011100000110000111111100000000",
"1111000111100000111100011111000000000001111000000000000111111100000000000111101111111110001110011100000000011111111111100001111100011100000000001101111100001111",
"1000001101111001110000000111000000000001100000000000000011111100000110000000001111111110001110011100111000001101111111100001111100000000000000001100111100011111",
"0000011100111001110000000111000000000001100000000000000011111100000111111000011111111100001110011100111000000000011101100001111100000000111111001100011110011111",
"0000011100111001100000000111000001111001100000000000000011100000000011111000111111000000001100011100011000000000011101111001100111100000111111111100011110011111",
"1111111110111000000000011111110001111100000000000000111111100000000011111000111000000000001100011000011000000000111101111001100001100000011111111100111110011111",
"1111100110111000000000011100110001111100000000000000111111100000011111111000000000000000001111000000011000001111100100011101100000000000011111111111111100011110",
"0011000110111000000000011000110001111100000000001100001100000000111011111000000000110001111111000000011001111111100100011100000000000001111111111111111100111110",
"0000000110011000000000000000000001111100000000001100000000000000111000000000000000110011001001111000010011111111111110011000001101100001101111111111111100111100",
"0000000110011111110000000000001111011100000000000000000000000000000000000011000000000011001001011001110011111111111111111000111101100000000111111111111100110000",
"0011100000011011110000000001101100011111000011100111000000000000000011100011000000000001111111000001110000111100011111110001100001100000000111111111111000000000",
"0011100000000011111000000001100100001111000011100111111100110000001111111110000000000000111111000001100000111100011111100011100011100000000000001111110000000000",
"0011000000000011001000000000000111001110000011100111111111111000011111001110000000000000111111000001100000000000011100001111110011100011110000000001110000111111",
"0011000000001111001110000000001111100110000110110111111101111100011100001111100110000000111111100001100000000000000000001111110011100011111000000001110000111111",
"0011000000001001000110000000001111100100000110110011111001111100000000000011111110000000111111111000000000000000000000111110000011111111111100000001110000111111",
"0000000000111001000110000110000000000100000000110011000000000000000000000001111110000000000111111000000000000000111111111000000000111111111100000111110000111111",
"0000000000111001100111111110000000000111111000000011000000000000011000110000011110111000000111111100000000011001111011111000000000110111111110000111110000111111",
"0000000000000001100011111110000000000111101110000011100000000000011000110000011100111000000111111100000000011001111011011000111100000111011111000000000000111111",
"1000000000000000000010011110011000000001001011100011110000000011110000110000000000111110000111111100001110000000000000011110111100000011000111100000001100111111",
"1100000000000000000110011111011100000001001001110011110000000111110000000000000000111111000110000000001110000000000000011110000000000000000001100000001100111111",
"1111110000000000000110011111011110000001001001111111000000000110000110000000000000111111000000000000001111110000011001111110000000001100000001111000000000111001",
"1111110000000000000111111110011110000001111001111110000000000000000110000000000000000111000000000000001000110000011001110110000000001100011001111000111001110001",
"1100111100000000000111111110001110000000000001111100000000111000000000000000000000000111111110000001111000000000011001100110000000000000011111111000111001110001",
"0000111110000000000111111110001110000000000001111100011111111000000000001110000000000001111110011111111100000000011001100110000000000000011111111000011000000000",
"0000111110011111110110011110001110001111110000000111111111111000000000111110000110000001111110011111111110000000000001100000000000011000011111111000011000000000",
"0000111110011111110000000000011110001111110000000001110000111111110000111110011111110001111110000111111110000000000000000000110000011000011111001000011000000000",
"0000000001111111110000000000011110001111110000000001110000001111110000111111111111110001101110000111111111000111000000000000110000000000001111001110010011111100",
"0000000001111110000001100000011110000000000111111100110110001111110000011111111111000000001111111111111111100111000000000000110000000000000111000011110011111100",
"0000000000000000000001100000111111100000000111111100110110000001111000001111111111000000001111111110011111101111000110000000110000110000000011000011111111111100",
"0000000000000000000000000000111011100000000111110111100111000001111000001111111111000001111110111110000111101111000110000000110000110000111011000011111111111100",
"0000000000000011111000000011111011100000000111100111100111100000111000001111111110000011111110111000000000001111000011110000111100110001111000000011111011100000",
"0000000000000111111001100011110011000000000111000011100111111000111000001111111110000011111000000000000000001111000011110000111100000011100000001111111000000000",
"0000110000000111111111100011100000000000001111000000000111111000111000001111111110000011100000000000000000000000000011100000111000000011100000001110011000000000",
"1111111111000000011111100000000000011110011111111100000111111000111000000011111111110000000000000000000000000000110000000000000011100011000000011110011100001111",
"1111100011000000011110000000000001111111111111111100000111111110000000000011101111110000000000000000111011111000111000000000000011100000000000011100011100011111",
"1111100000000000011110000000000001111111111111111100001111111110000001100000000111110000000000000001111011111000111110000000000000000000000011011000000000111111",
"0011000000000000011110000001100000111111111111111100001111011110000001100000000111110000000000000001111001111000110110000000000000000000000011000000000001111111",
"0011000000000000011110000011100000111111111111111100001110000110111111000000000111110000000000000011111001111100000000000000000000000000000011000000000011100011",
"0011000000000000011100000111111100110111111111000000001110000110111111000000000000001100000000000011111111111100000000111000000000000000000000000000000011000011",
"0010000000000000011100011111111100000000111100000000001100000110000110000110000000001100000011000000011111111111000000111000000000001110000000000000000000011000",
"1110000000000110011100011111111100000000000000011111111100001110000110000110000000001100000011000000011111111111100000111000000000011111111000111000011100011001",
"1000000000001111101100011111001100000000000000011111111100011110000000000000000000000111000000000000111111111111100000000000000011111110011000111000111100011001",
"0011111110001111100000111000001111100000001100000111110000011100000000000000000011000111111000000000111011111111000000000000000011110000011000110001111110000000",
"0011101110001111111000111000001111100011001100000111110000011100000000001100000011000111111100000000111011111111000000000000000011110000011000100011111110000000",
"0000000000001111111011111110001111100011111110011111100000011100000000001100000011000111111111000000111011001111100000000011100011110111111001100011111000000000",
"0000000000001101111011111111100000110001110110011111100000000000011001100000000011111111111111000000000000001111100000000011100011100111110011100011111000000000",
"0000000000000000000000111111100000110001100110000001111111000000011001100000000011111111111110000000000000001111100011110000000001100111110011100011111000000000",
"0000000011100000000000011111000001110001100000000001111111000111110001100000000000111110000000000000110000001111100111111100000000000111111000000011111000000000",
"0000000011100000000000000011000001110001100000000001111111001111110001100000000000011110000000000000110000000111000111111100000000000111111110000000001100000000",
"0000000001100000000000000000000000001111100000000001111111001111110001111111111000011110000000000000110000000011000000011111100110000111111111111000001111110000",
"0001111001100000000011000000000000001110000000000000111111100011100000111111111000000000111111100000000000000011000000011111100111000001111111111000001110110000",
"0001111000000000000011000000000111000000000000000000111111110000000000011111000000000000111111100000000000000011001111111111100111100001110011111111100000000000",
"0000000000000000110001110000001111000011000000000000111101110000000000011111000001110000000111100000000000011111001111111111100111111111010001000001100000000000",
"0000000000000000110001111000001111000011000001100011110000111111100111111111000001111100000111110000000000011000001111100011000111011111011001000001100111100000",
"0000000000000111110001111000000111000011000001100111100000111111111111110011111001111100000011110000000000110000001111100000000111011111011001110001100111111110",
"0000000000111111110000000000000111000000000001100111100000111111111111100011111000011100000000000000001111110000001111100000000111001110011111111111100001111110",
"0110000000111100011000000111000001000000000001100111100001111111011111000001111000011100001100000000001111000000001111100000000111000110001111111111100001111000",
"0110000000111000011000000111000001000000000111000111111101111110000000000001111000001100001100000000001111000000001001100000000000000110000000011111100000011000",
"0000000011111000000000000110000011001111100111000001010101010101010101001010111101001010101001011110011110001110011001100000000000000111000000011111100000000000",
"0000011111110000000000000110011111001111100000000001111000011100000000011100111000111100011100000000000000111110011000000000011110000111000000011111100000000000",
"1100011111000000000000001111111111111111100000000000111000000000000000111000000000111100011110000000011100111110011000011100011110001110000000011111100011000011",
"1110001111000000000000001111111111111111000000000000111000000011000000110000000000111100011111000000011100000000011111111100001110001110011111011110000011100011",
"1111001111000000000110001111111111111111000000000000111110000011000000000000000000011100011111000000000000000000011111111100001110001110010011000000000011100001",
"1111000111000111111110000001111110000111000000000000111110000000000000000110011100011001111111000000000000000000011100111100001111001111110011000000000001111000",
"0111000111111111111110000001111110000111111111000011111110000000000000111110011100011001111111000000000000000000011100111111111111001111110000000000000000111000",
"0110000111111111111100110000111100001111111111000011111100000000001111101110000000011000111111000000000000000000011111111111111111001111111000000001100000000000",
"0000000001111111111000110000111100011111011111000011111100000000001111100011111110011000000111000000001100000000011100000111111110001111111000000001100111100000",
"0000000000111111100000000001111100011111011011110001110000000000000011110000011111111000000000000011001100111100011100000111111110000001110011000111111111100000",
"1000000000111111100000000011100000011111000011110000000000000000000011111000011111110000000000000011000000111100011100000111111110000000000011000110111111100001",
"1000000000111111000000000011000000011111000000000000000000000000000011111000011111100000000000000011001111111100011110000111111100000000000000000110011110000001",
"1000000000111111000000011111000000011111111000000000000000000111000001111000001111100000000000000000011111001111111110000111001100000000000001100110011000000001",
"1000000000111111000011111111000000011110111000111100000000011111111001110000001111110000000001100000111111001111111110011111000100000000000001100000011000000001",
"0000000000111001000011000000000011111110110000111100011100011111111001110000001111110000000001100001110011001111111111111111000111000000000000000000011000000000",
"0000000000000001110010000000000011000000000000110111111100111111111001110000000000110000111001100111000011000000001111111001111111000000000000000000000001111000",
"0110000000000001111110000000000011000000000000110111110000111111111000110000000000000000111000001111000111111000000011110001111111100000000000000000000001111100",
"0110001111000001111111111000000011000000000000000111000011111111111100111000000011000000111000001110000111111000000011110000001111100000000011100001110000001100",
"1110001111000001111111111000000111110000011100000110000011111111111100111001100011000000011000000110001111100000000011110000000001100001111111100001111100000001",
"1100000000000011001101111000000111111100011100111110000001111111111111111111110000000000011111000111001101100000000000110000000000000111111111111000111110000001",
"0000000000000011000001111000000111111100000000111100000001110111111111110111110000000000011111111111111101100000000000110000000000000111111111111100111111011000" ]
    """

#dim (160,120)
seed1 = [
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",]





def map_gen(seed=4201337):
    random.seed(seed)
    colornb = 2
    x_cells = int(screen.get_width() / 10)
    y_cells = int(screen.get_height() / 10)

    #grid is first a strls then a CellGrid
    grid = CellGrid(colornb, x_cells, y_cells, screen) | CellGrid(colornb, x_cells, y_cells, screen, seed=seed1)
    grid = CellGrid(colornb, x_cells, y_cells, screen, seed=grid)
    #print(grid)
    gparent = copy.copy(grid)


    grid.update()
    #print(grid)
    parent = copy.copy(grid)

    i = 0
    status = 0

    while not done:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                done = True

        if (status != 2):
            grid.display()
        pygame.display.flip()
        if status == 0:
            grid.update()
            #print(grid)
            if grid == gparent or i == 100:
                unstables = gparent & parent
                grid.clean(unstables)
                print(grid)
                status = 1
            else:
                gparent = copy.copy(parent)
                parent = copy.copy(grid)
        if status == 1:
            #TODO floodfill ?
            #tmp = zeros(grid.width, grid.height)
            #loots = grid.get_areas
            grid.scale3x()
            print(grid)
            grid.update(mode="SPRITE")
            print(grid)
            done = 1
        i += 1

    #grid.display("SPRITE")

    return grid